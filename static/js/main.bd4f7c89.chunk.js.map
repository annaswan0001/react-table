{"version":3,"sources":["data.jsx","ReactTable/ReactTableBasic.jsx","Filters/Select.jsx","Filters/FiltersData.jsx","Filters/InputFilter.jsx","BootstrapTable/BootstrapTable.jsx","Search/Search.jsx","BootstrapTable/BootstrapTableContainer.jsx","useFetchHook.jsx","App.jsx","serviceWorker.js","index.js"],"names":["data","col1","col2","col3","age","dateOfBitrh","fuzzyTextFilterFn","rows","id","filterValue","matchSorter","keys","row","values","App","useState","tableData","setData","DefaultColumnFilter","column","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","useEffect","fetch","setTimeout","fetchData","clearInterval","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","SelectColumnFilter","options","Set","forEach","add","map","option","i","key","columns","Header","Footer","accessor","disableFilters","info","total","reduce","sum","useTable","initialState","pageIndex","defaultCanFilter","useFilters","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","footerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","style","border","console","log","headerGroup","getRowProps","cells","cell","getCellProps","padding","background","render","group","getFooterGroupProps","headers","getFooterProps","textAlign","onClick","disabled","type","defaultValue","Number","width","Select","optionsArray","handleSelectChange","optionItem","label","idFilterData","InputFilter","handleInputChange","BootstrapTable","setFilterId","idFilter","firsrNameFilter","setFilterFirstName","className","firstName","lastName","email","phone","category","Search","onChangeFilter","BootstrapTableContainer","setFilterValue","setIdFilter","setFirstNameFilter","initialUrl","initialData","url","setUrl","loading","setLoading","error","setError","a","axios","resp","message","useFetchHook","dataTable","setDataTable","filterChange","useCallback","newData","obj","Object","some","toString","trim","includes","searchComponent","bootstrapTable","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bd4f7c89.chunk.js","sourcesContent":["import React from 'react'\n\n\n  const data = [\n        {\n          col1: \"Samoylenko\",\n          col2: \"Anna\",\n          col3: \"Vitaliivna\",\n          age: 28, //row 1\n          dateOfBitrh: \"11.08.1991\",\n        },\n        {\n          col1: \"Korgenko\",\n          col2: \"Alexandra\",\n          col3: \"Sergiivna\", // row 2\n          age: 22, //row 1\n          dateOfBitrh: \"10.06.1991\",\n        },\n        {\n          col1: \"Kuzmenko\",\n          col2: \"Vitalii\",\n          col3: \"Vasilovich\", //row 3\n          age: 28, //row 1\n          dateOfBitrh: \"01.06.1991\",\n        },\n        {\n          col1: \"Samoylenko\",\n          col2: \"Sergii\",\n          col3: \"Viktorovich\",\n          age: 33, //row 1\n          dateOfBitrh: \"20.06.1991\",\n        },\n        {\n            col1: \"Samoylenko\",\n            col2: \"Anna\",\n            col3: \"Vitaliivna\",\n            age: 28, //row 1\n            dateOfBitrh: \"11.08.1991\",\n          },\n          {\n            col1: \"Korgenko\",\n            col2: \"Alexandra\",\n            col3: \"Sergiivna\", // row 2\n            age: 22, //row 1\n            dateOfBitrh: \"10.06.1991\",\n          },\n          {\n            col1: \"Kuzmenko\",\n            col2: \"Vitalii\",\n            col3: \"Vasilovich\", //row 3\n            age: 28, //row 1\n            dateOfBitrh: \"01.06.1991\",\n          },\n          {\n            col1: \"Samoylenko\",\n            col2: \"Sergii\",\n            col3: \"Viktorovich\",\n            age: 33, //row 1\n            dateOfBitrh: \"20.06.1991\",\n          },\n          {\n            col1: \"Samoylenko\",\n            col2: \"Anna\",\n            col3: \"Vitaliivna\",\n            age: 28, //row 1\n            dateOfBitrh: \"11.08.1991\",\n          },\n          {\n            col1: \"Korgenko\",\n            col2: \"Alexandra\",\n            col3: \"Sergiivna\", // row 2\n            age: 22, //row 1\n            dateOfBitrh: \"10.06.1991\",\n          },\n          {\n            col1: \"Kuzmenko\",\n            col2: \"Vitalii\",\n            col3: \"Vasilovich\", //row 3\n            age: 28, //row 1\n            dateOfBitrh: \"01.06.1991\",\n          },\n          {\n            col1: \"Samoylenko\",\n            col2: \"Sergii\",\n            col3: \"Viktorovich\",\n            age: 33, //row 1\n            dateOfBitrh: \"20.06.1991\",\n          },\n          {\n            col1: \"Samoylenko\",\n            col2: \"Anna\",\n            col3: \"Vitaliivna\",\n            age: 28, //row 1\n            dateOfBitrh: \"11.08.1991\",\n          },\n          {\n            col1: \"Korgenko\",\n            col2: \"Alexandra\",\n            col3: \"Sergiivna\", // row 2\n            age: 22, //row 1\n            dateOfBitrh: \"10.06.1991\",\n          },\n          {\n            col1: \"Kuzmenko\",\n            col2: \"Vitalii\",\n            col3: \"Vasilovich\", //row 3\n            age: 28, //row 1\n            dateOfBitrh: \"01.06.1991\",\n          },\n          {\n            col1: \"Samoylenko\",\n            col2: \"Sergii\",\n            col3: \"Viktorovich\",\n            age: 33, //row 1\n            dateOfBitrh: \"20.06.1991\",\n          },\n          {\n            col1: \"Samoylenko\",\n            col2: \"Anna\",\n            col3: \"Vitaliivna\",\n            age: 28, //row 1\n            dateOfBitrh: \"11.08.1991\",\n          },\n          {\n            col1: \"Korgenko\",\n            col2: \"Alexandra\",\n            col3: \"Sergiivna\", // row 2\n            age: 22, //row 1\n            dateOfBitrh: \"10.06.1991\",\n          },\n          {\n            col1: \"Kuzmenko\",\n            col2: \"Vitalii\",\n            col3: \"Vasilovich\", //row 3\n            age: 28, //row 1\n            dateOfBitrh: \"01.06.1991\",\n          },\n          {\n            col1: \"Samoylenko\",\n            col2: \"Sergii\",\n            col3: \"Viktorovich\",\n            age: 33, //row 1\n            dateOfBitrh: \"20.06.1991\",\n          },\n      ]\n    export default  data","import React, {useState, useEffect} from \"react\";\nimport fetchData from \"../data\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useFilters,\n  useGlobalFilter,\n  useAsyncDebounce,\n} from \"react-table\";\n\n// import tableData from \"../data\";\nimport matchSorter from \"match-sorter\";\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\n}\nexport default function App() {\n    const [tableData, setData] = useState([]);\n\n    useEffect(() => {\n      const fetch = setTimeout(() => {\n        setData(fetchData);\n      }, 2000);\n      return () => clearInterval(fetch);\n    }, [setData]);\n\n    function DefaultColumnFilter({\n        column: { filterValue, preFilteredRows, setFilter },\n      }) {\n        const count = preFilteredRows.length\n      \n        return (\n          <input\n            value={filterValue || ''}\n            onChange={e => {\n              setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n            }}\n            placeholder={`Search ${count} records...`}\n          />\n        )\n      }\n      \n  const filterTypes = React.useMemo(\n    () => ({\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: (rows, id, filterValue) => {\n        return rows.filter((row) => {\n          const rowValue = row.values[id];\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true;\n        });\n      },\n    }),\n    []\n  );\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n\n  function SelectColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n  }) {\n    // Calculate the options for filtering\n    // using the preFilteredRows\n    const options = React.useMemo(() => {\n      const options = new Set();\n      preFilteredRows.forEach((row) => {\n        options.add(row.values[id]);\n      });\n      return [...options.values()];\n    }, [id, preFilteredRows]);\n\n    // Render a multi-select box\n    return (\n      <select\n        value={filterValue}\n        onChange={(e) => {\n          setFilter(e.target.value || undefined);\n        }}\n      >\n        <option value=\"\">All</option>\n        {options.map((option, i) => (\n          <option key={i} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    );\n  }\n\n\n\n  const data = React.useMemo(() => tableData, [tableData]);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Info\",\n        Footer: \"Info\",\n        columns: [\n          {\n            Header: \"First Name\",\n            accessor: \"col1\", // accessor is the \"key\" in the data\n            // Footer: \"First Name\"\n            disableFilters: true\n          },\n          {\n            Header: \"Name\",\n            accessor: \"col2\",\n            // Footer: \"Name\"\n            disableFilters: true\n          },\n          {\n            Header: \"FatherName\",\n            accessor: \"col3\",\n            // Footer: \"Father Name\"\n            // disableFilters: true\n          },\n        ],\n      },\n\n      {\n        Header: \"Age\",\n        Footer: \"Age\",\n        columns: [\n          {\n            Header: \"Age\",\n            accessor: \"age\",\n            Footer: (info) => {\n            //   console.log(info, \"info\");\n              // Only calculate total visits if rows change\n              const total = React.useMemo(\n                () => info.rows.reduce((sum, row) => row.values.age + sum, 0),\n                [info.rows]\n              );\n\n              return <>Total: {total}</>;\n            },\n            Filter: SelectColumnFilter,\n          },\n          {\n            Header: \"Date of Bitrh\",\n            accessor: \"dateOfBitrh\",\n            Footer: \"Bitrh\",\n            disableFilters: true\n          },\n        ],\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n // Be sure to pass the defaultColumn option\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0 },\n      defaultColumn,\n      filterTypes,\n      defaultCanFilter: false,\n   \n    },\n    useFilters, // useFilters!\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  );\n\n  return (\n    <>\n      <table {...getTableProps()} style={{ border: \"solid 1px blue\" }}>\n        <thead>\n          {console.log(\"reacttable\")}\n          {headerGroups.map(\n            (headerGroup) => (\n            //   console.log(headerGroup, \"headerGroup\"),\n              (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                   \n                  {headerGroup.headers.map(\n                    (column) => (\n                    //   console.log(column, \"column\"),\n                      (\n                        <th\n                          {...column.getHeaderProps(\n                            column.getSortByToggleProps()\n                          )}\n                          style={{\n                            border: \"solid 1px black\",\n                            background: \"aliceblue\",\n                            color: \"black\",\n                            fontWeight: \"bold\",\n                          }}\n                        >\n                          {column.render(\"Header\")}\n                          <div>{column.canFilter ? column.render('Filter') : null}</div>\n                          {/* {console.log(column)} */}\n                          <span>\n                            {column.isSorted\n                              ? column.isSortedDesc\n                                ? \" 🔽\"\n                                : \" 🔼\"\n                              : \"\"}\n                          </span>\n                        </th>\n                      )\n                    )\n                  )}\n                </tr>\n              )\n            )\n          )}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            // console.log(row, \"row\");\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                //   console.log(cell, \"cell\");\n                  return (\n                    <td\n                      {...cell.getCellProps()}\n                      style={{\n                        padding: \"10px\",\n                        border: \"solid 1px gray\",\n                        background: \"papayawhip\",\n                      }}\n                    >\n                      {cell.render(\"Cell\")}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n        <tfoot>\n          {footerGroups.map((group) => (\n            <tr {...group.getFooterGroupProps()}>\n              {group.headers.map((column) => (\n                <td\n                  style={{\n                    padding: \"10px\",\n                    border: \"solid 1px gray\",\n                    background: \"#fff\",\n                  }}\n                  {...column.getFooterProps()}\n                >\n                  {column.render(\"Footer\")}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n\n      <div style={{ textAlign: \"left\" }}>\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {\"<<\"}\n        </button>{\" \"}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {\"<\"}\n        </button>{\" \"}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {\">\"}\n        </button>{\" \"}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {\">>\"}\n        </button>{\" \"}\n        <span>\n          Page{\" \"}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{\" \"}\n        </span>\n        <span>\n          | Go to page:{\" \"}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\n              gotoPage(page);\n            }}\n            style={{ width: \"100px\" }}\n          />\n        </span>{\" \"}\n        <select\n          value={pageSize}\n          onChange={(e) => {\n            setPageSize(Number(e.target.value));\n          }}\n        >\n          {[2, 10, 20, 30, 40, 50].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n      {/* {console.log(tableData,\"newData\")} */}\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Select({ optionsArray, value, handleSelectChange }) {\n  \n    const onChange = (e) => {\n    handleSelectChange(e.target.value);\n  \n  };\n\n  return (\n    <div>\n      <select value={value} onChange={onChange}>\n        {optionsArray.map((optionItem) => (\n          <option key={optionItem.value} value={optionItem.value}>\n            {optionItem.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","\n\nexport const idFilterData = [\n    {value: 0, label: \"0-299\" }, \n    {value: 300, label: \"300-599\" },\n    {value: 600, label: \"600-1000\" },\n    {value: \"all\", label: \"all\" },\n]","import React from 'react'\n\nexport default function InputFilter({value, handleInputChange}) {\n    const onChange = (e)=>{\n        handleInputChange(e.target.value)\n    }\n    return (\n        <div>\n            <input type=\"text\" value={value} onChange={onChange}/>\n        </div>\n    )\n}\n","import React from \"react\";\nimport Select from '../Filters/Select'\nimport {idFilterData} from '../Filters/FiltersData'\nimport InputFilter from '../Filters/InputFilter'\n\nexport default function BootstrapTable({ data,setFilterId, idFilter, firsrNameFilter ,setFilterFirstName }) {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>\n            <p>ID</p>\n            <Select value={idFilter} \n            handleSelectChange={setFilterId} \n            optionsArray={idFilterData}/>\n          </th>\n          <th>\n\n          <p>FirstName</p>\n            <InputFilter\n            value={firsrNameFilter}\n            handleInputChange={setFilterFirstName}\n            />\n          </th>\n\n          <th>Last </th>\n          <th>Email</th>\n          <th>Phone</th>\n          <th>Category</th>\n          <th>Category</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((row) => {\n          return (\n            <tr key={row.id}>\n              <td>{row.id}</td>\n              <td>{row.firstName}</td>\n              <td>{row.lastName}</td>\n              <td>{row.email}</td>\n              <td>{row.phone}</td>\n              <td>{row.category}</td>\n              <td>{row.category}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n","import React from 'react'\n\nexport default function Search({onChangeFilter, filterValue}) {\n    const onChangeInput = (e) =>{\n        onChangeFilter(e.target.value)\n    }\n    return (\n        <div>\n            <input onChange={onChangeInput} value={filterValue} type=\"text\"/>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport BootstrapTable from \"./BootstrapTable\";\nimport Search from \"../Search/Search\";\nimport useFetchHook from \"../useFetchHook\";\nimport { idFilterData } from \"../Filters/FiltersData\";\n\nexport default function BootstrapTableContainer() {\n  const [filterValue, setFilterValue] = useState(\"\");\n  const [idFilter, setIdFilter] = useState(\"all\");\n  const [firsrNameFilter, setFirstNameFilter] = useState(\"\");\n  const [data, loading, error, setError] = useFetchHook(\n    `http://www.filltext.com/?rows=${20}&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&category=[1,2]&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`,\n    []\n  );\n  const [dataTable, setDataTable] = useState(data);\n\n  //general filter\n  useEffect(() => {\n    setDataTable(data);\n  }, [data]);\n\n  const filterChange = useCallback(\n    (value) => {\n      setFilterValue(value);\n    },\n    [setFilterValue]\n  );\n\n  useEffect(() => {\n    if (!filterValue) {\n      setDataTable(data);\n    } else {\n      const newData = data.filter((obj) => {\n        return Object.keys(obj).some((key) => {\n          if (typeof obj[key] === \"string\" || \"number\") {\n            return obj[key]\n              .toString()\n              .toLowerCase()\n              .trim()\n              .includes(filterValue.toLowerCase().trim());\n          }\n        });\n      });\n      setDataTable(newData);\n    }\n  }, [filterValue, setDataTable, data]);\n\n  //idFilter\n  const setFilterId = useCallback((value) => {\n    setIdFilter(value);\n  }, setIdFilter);\n\n  useEffect(() => {\n    let newData;\n    switch (idFilter) {\n      case \"all\":\n        newData = [...dataTable];\n        break;\n      case \"0\":\n        newData = dataTable.filter((obj) => {\n          return obj.id >= 0 && obj.id < 300;\n        });\n        break;\n      case \"300\":\n        newData = dataTable.filter((obj) => {\n          return obj.id >= 300 && obj.id < 600;\n        });\n        break;\n      case \"600\":\n        newData = dataTable.filter((obj) => {\n          return obj.id >= 600 && obj.id <= 1000;\n        });\n        break;\n      default:\n        break;\n    }\n    if (!firsrNameFilter) {\n       newData = [...newData]\n    } else {\n       newData = newData.filter((obj) => {\n        return obj.firstName\n          .toLowerCase()\n          .includes(firsrNameFilter.toLowerCase());\n      });\n     \n    }\n    setDataTable(newData);\n  }, [idFilter, setDataTable, firsrNameFilter]);\n\n  //nameFilter\n  const setFilterFirstName = useCallback((value) => {\n    setFirstNameFilter(value);\n  }, setFirstNameFilter);\n\n\n  const searchComponent = useMemo(() => {\n    return <Search onChangeFilter={filterChange} filterValue={filterValue} />;\n  }, [filterChange, filterValue]);\n\n  const bootstrapTable = useMemo(() => {\n    return (\n      <BootstrapTable\n        idFilter={idFilter}\n        setFilterId={setFilterId}\n        firsrNameFilter={firsrNameFilter}\n        setFilterFirstName={setFilterFirstName}\n        data={dataTable}\n      />\n    );\n  }, [dataTable, idFilter, setFilterId, firsrNameFilter, setFilterFirstName]);\n\n\n\n  return (\n    <div>\n      {searchComponent}\n      {bootstrapTable}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function useFetchHook(initialUrl, initialData) {\n  const [url, setUrl] = useState(initialUrl);\n  const [data, setData] = useState(initialData);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(false);\n      try {\n        const resp = await axios(url);\n        setData(resp.data)\n       \n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchData()\n  }, [url]);\n\n  return[data, loading, error, setUrl]\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport ReactTableBasic from \"./ReactTable/ReactTableBasic\";\nimport BootstrapTableContainer from \"./BootstrapTable/BootstrapTableContainer\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n    <Router>\n      <NavLink to=\"/react-table\">REACT_TABLE</NavLink>\n      <p></p>\n      <NavLink to=\"/bootstrap-table\">BOOTSTRAP_TABLE</NavLink>\n      <Switch>\n        <Route exact path=\"/react-table\">\n          <ReactTableBasic /> \n        </Route>\n        <Route exact path=\"/bootstrap-table\">\n          <BootstrapTableContainer/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}